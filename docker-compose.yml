version: '3.8'

services:
  api:
    build:
      context: .
      dockerfile: Dockerfile
    image: llamachain-api
    container_name: llamachain-api
    restart: unless-stopped
    ports:
      - "8000:8000"
    environment:
      - DATABASE_URL=postgresql+asyncpg://postgres:postgres@db:5432/llamachain
      - API_HOST=0.0.0.0
      - API_PORT=8000
      - LOG_LEVEL=INFO
      - DEBUG=false
    depends_on:
      - db
    volumes:
      - ./data:/app/data
    command: ["python", "-m", "llamachain", "api"]
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 10s

  worker:
    build:
      context: .
      dockerfile: Dockerfile
    image: llamachain-worker
    container_name: llamachain-worker
    restart: unless-stopped
    environment:
      - DATABASE_URL=postgresql+asyncpg://postgres:postgres@db:5432/llamachain
      - LOG_LEVEL=INFO
      - DEBUG=false
    depends_on:
      - db
    volumes:
      - ./data:/app/data
    command: ["python", "-m", "llamachain", "worker"]
    healthcheck:
      test: ["CMD", "ps", "aux", "|", "grep", "[p]ython -m llamachain worker"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 10s

  db:
    image: postgres:15-alpine
    container_name: llamachain-db
    restart: unless-stopped
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=llamachain
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

volumes:
  postgres_data: 